<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>post on Siddharth&#39;s Blog</title>
    <link>https://subsid.github.io/tags/post/</link>
    <description>Recent content in post on Siddharth&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 31 Jan 2019 06:12:40 -0500</lastBuildDate><atom:link href="https://subsid.github.io/tags/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Entropy as an Error Measure</title>
      <link>https://subsid.github.io/posts/2019-01-31-entropy-as-an-error-measure/</link>
      <pubDate>Thu, 31 Jan 2019 06:12:40 -0500</pubDate>
      
      <guid>https://subsid.github.io/posts/2019-01-31-entropy-as-an-error-measure/</guid>
      <description>In Shannon&amp;#39;s paper A Mathematical Theory of Communication, he represented a communication system using the following schematic:
He defined Entropy, a quantity that forms the basis of information theory.
Entropy Information Entropy is interpreted in many ways. One way that I like to think about it is in terms of &amp;#34; how much randomness is present in the state-space?&amp;#34; (Similar to Boltzmann&amp;#39;s Entropy). It is defined as the following:</description>
    </item>
    
    <item>
      <title>Toward a Unified Ontology of Cloud Computing</title>
      <link>https://subsid.github.io/posts/2019-01-23-ontology-of-cloud-computing/</link>
      <pubDate>Wed, 23 Jan 2019 00:55:49 -0500</pubDate>
      
      <guid>https://subsid.github.io/posts/2019-01-23-ontology-of-cloud-computing/</guid>
      <description>Toward a Unified Ontology of Cloud Computing L. Youseff, M. Butrico, and D. Da Silva, 2008 Grid Computing Environments Workshop, Austin, TX, 2008, pp. 1-10.
This paper is one of the early (relatively) works that summarizes the various components of Cloud Computing. At the time (2008), AWS was in the market only for a couple of years and Google cloud was just getting started. Thinking back, the classification described here is pretty much how most offerings these days are grouped.</description>
    </item>
    
    <item>
      <title>Sketch Tutor - Game based learning</title>
      <link>https://subsid.github.io/posts/2017-12-15-sketch-tutor/</link>
      <pubDate>Fri, 15 Dec 2017 13:56:21 -0500</pubDate>
      
      <guid>https://subsid.github.io/posts/2017-12-15-sketch-tutor/</guid>
      <description>Sketch recognition is the automated recognition of hand drawn diagrams. In general, sketch recognition techniques can be classified into three types:
Appearance based This comes more from the field of computer vision, but is not very useful for varying shapes. It does not take temporal data into account.
Gesture based Most useful for forensic methods, but requires user specific training. Every individual has their own quirks when sketching! Geometric based Models are built based on Geometric constraints.</description>
    </item>
    
    <item>
      <title>Physics of Flocking</title>
      <link>https://subsid.github.io/posts/2017-09-22-physics-of-flocking/</link>
      <pubDate>Fri, 22 Sep 2017 04:56:54 -0500</pubDate>
      
      <guid>https://subsid.github.io/posts/2017-09-22-physics-of-flocking/</guid>
      <description>Blog Programming Languages Java Script As a part my of physics based modelling course, I implemented a flocking simulation using threejs.
Flocking (or Swarming) is a nice example of something known as emergent behavior (wiki).
Emergence is a phenomenon whereby larger entities arise through interactions among smaller or simpler entities such that the larger entities exhibit properties the smaller/simpler entities do not exhibit.
This behavior is common among various animal groups such as birds, ants, bees, fishes.</description>
    </item>
    
  </channel>
</rss>
